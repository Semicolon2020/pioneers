<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_api_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listBlogMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::listblogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/listblogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listCmtMobile' => array (  0 =>   array (    0 => 'idB',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::listCmtAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idB',    ),    1 =>     array (      0 => 'text',      1 => '/api/listCmt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AuthMobile' => array (  0 =>   array (    0 => 'username',    1 => 'password',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::AuthAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    2 =>     array (      0 => 'text',      1 => '/api/auth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddCmt' => array (  0 =>   array (    0 => 'idB',    1 => 'idU',    2 => 'text',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::addCmtAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'text',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idU',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idB',    ),    3 =>     array (      0 => 'text',      1 => '/api/addCmt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AffReply' => array (  0 =>   array (    0 => 'idC',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::listReplyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    1 =>     array (      0 => 'text',      1 => '/api/listrep',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddReply' => array (  0 =>   array (    0 => 'idC',    1 => 'idU',    2 => 'text',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::addReplyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'text',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idU',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idC',    ),    3 =>     array (      0 => 'text',      1 => '/api/addReply',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddUser' => array (  0 =>   array (    0 => 'cin',    1 => 'nom',    2 => 'prenom',    3 => 'etat',    4 => 'mail',    5 => 'username',    6 => 'password',    7 => 'num',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::addUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'num',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mail',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'etat',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prenom',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cin',    ),    8 =>     array (      0 => 'text',      1 => '/api/addUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddEnf' => array (  0 =>   array (    0 => 'cin',    1 => 'nom',    2 => 'prenom',    3 => 'age',    4 => 'sexe',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::addEnfantAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sexe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'age',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prenom',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cin',    ),    5 =>     array (      0 => 'text',      1 => '/api/addEnfant',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ChangePass' => array (  0 =>   array (    0 => 'id',    1 => 'password',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::ChangePassAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/chgPass',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddLikeR' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::AddLikeRAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/addliker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AddLikeC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::AddLikeCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/addlikec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'back_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackBundle\\Controller\\BackController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pioneer_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pioneer/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addBlogAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pioneer/addblog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listallBlogAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::listblogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pioneer/listallblog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateBlogAdmin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::updateblogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/updateblog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteBlogAdmin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::deleteblogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/deleteblog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listallFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::viewfrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pioneer/listview',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'singleblogFront' => array (  0 =>   array (    0 => 'id',    1 => 'idU',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::singleblogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idU',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pioneer/singleblog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteCmtFront' => array (  0 =>   array (    0 => 'idc',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::deleteCmtAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idc',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/deleteCmt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LikeCmtFront' => array (  0 =>   array (    0 => 'idc',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::LikeCmtAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idc',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/likeCmt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteReplyFront' => array (  0 =>   array (    0 => 'idR',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::deleteReplyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idR',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/deleteReply',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LikeReplyFront' => array (  0 =>   array (    0 => 'idR',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::LikeReplyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idR',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/likeReply',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'MarkSeen' => array (  0 =>   array (    0 => 'idNotif',  ),  1 =>   array (    '_controller' => 'PioneerBundle\\Controller\\BlogController::MarkSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idNotif',    ),    1 =>     array (      0 => 'text',      1 => '/pioneer/markseen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'transport_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/t1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bus_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::afficherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/bus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_bus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::ajouterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'trajet_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\DefaultController::trajetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/trajet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Tback_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\DefaultController::backAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/back',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Transport2_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\DefaultController::transportespaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/t2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editdetails' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::modifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletedetails' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editdetailstr' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::modifiertrAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/edittr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletedetailstr' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::deletetrAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/deletetr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherdetails' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::afficherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/affiche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_trajet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::ajoutertrAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/addtr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherdetailstr' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::affichertrAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/affichetr',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_station' => array (  0 =>   array (    0 => 'id',    1 => 'm',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::ajouterstAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'm',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/addst',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherdetailsst' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::afficherstAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/affichest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletedetailsst' => array (  0 =>   array (    0 => 'id',    1 => 'id2',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::deletestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id2',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/transport/deletest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'busf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusetcovController::afficherfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/busf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'co' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusetcovController::affichercoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/co',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'demande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusetcovController::afficherdemandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/demande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offre' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusetcovController::afficheroffreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/offre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherbuss' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusetcovController::afficherbussAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/afficherbuss',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/busall',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile2' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::trajetfindAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/trajetid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile55' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::trajetfindbusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/trajetidzz',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile3' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/transport/trajetall',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile13' => array (  0 =>   array (    0 => 'name',    1 => 'idbus',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::trajetaddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idbus',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    2 =>     array (      0 => 'text',      1 => '/transport/trajetadd',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile4' => array (  0 =>   array (    0 => 'id',    1 => 'name',    2 => 'capacite',    3 => 'chauffeur',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::editmobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chauffeur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'capacite',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/transport/busmobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobil4' => array (  0 =>   array (    0 => 'name',    1 => 'capacite',    2 => 'chauffeur',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::addmobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chauffeur',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'capacite',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'text',      1 => '/transport/busmobile3',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile5' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\BusController::deletemobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/busmobile2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile51188' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::trajetdelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/trajetdel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile588' => array (  0 =>   array (    0 => 'name',    1 => 'idbus',    2 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\TrajetController::trajetedittAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idbus',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'text',      1 => '/transport/trajeteditt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile511288' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::stationdelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/stationdel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile5818' => array (  0 =>   array (    0 => 'name',    1 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::stationaddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    2 =>     array (      0 => 'text',      1 => '/transport/stationadd',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile58148' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TransportBundle\\Controller\\StationController::stationallAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/transport/stationall',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
